services:
  database:
    networks:
      - flow_network
    container_name: postgres_db
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
  backend:
    networks:
      - flow_network
    container_name: flow_backend
    build: 
      context: .
      dockerfile: app/main/Dockerfile
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - IP=${IP}
      - ENVIRONMENT=${ENVIRONMENT}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - PORT=${PORT}
      - EXPIRATION_TIME=${EXPIRATION_TIME}
      - COOKIE_SECURE=${COOKIE_SECURE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - VK_CLIENT_ID=${VK_CLIENT_ID}
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - database
    volumes:
      - ./static:/app/static

  auth:
    networks:
      - flow_network
    container_name: auth
    build:
      context: .
      dockerfile: app/auth/Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    # ports:
    #   - "8010:8010"
    depends_on:
      - database
  
  chat:
    networks:
      - flow_network
    container_name: chat
    build:
      context: .
      dockerfile: app/chat/Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    # таким образом, контейнер доступен только внутри сети
    # ports:
    #   - "8012:8012"
    depends_on:
      - database

  websocket_chat:
    networks:
      - flow_network
    container_name: websocket_chat
    build:
      context: .
      dockerfile: app/websocket_chat/Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - JWT_SECRET=${JWT_SECRET}
      - EXPIRATION_TIME=${EXPIRATION_TIME}
    # таким образом, контейнер доступен только внутри сети
    # ports:
    #   - "8013:8013"
    depends_on:
      - database

  feed:
    networks:
      - flow_network
    container_name: feed
    build:
      context: .
      dockerfile: app/feed/Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    # ports:
    #   - "8011:8011"
    depends_on:
      - database

networks:
  flow_network:
    driver: bridge

volumes:
  db_data:
