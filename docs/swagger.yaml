definitions:
  domain.Board:
    properties:
      author_id:
        type: integer
      author_username:
        type: string
      flow_count:
        type: integer
      gradient:
        items:
          type: string
        type: array
      id:
        type: integer
      is_editable:
        type: boolean
      is_private:
        type: boolean
      name:
        type: string
      preview:
        items:
          $ref: '#/definitions/domain.PinData'
        type: array
    type: object
  domain.BoardRequest:
    properties:
      flow_id:
        type: integer
    type: object
  domain.Invitaion:
    properties:
      names:
        items:
          type: string
        type: array
      time_limit:
        type: string
      usage_limit:
        type: integer
    type: object
  domain.LinkParams:
    properties:
      link:
        type: string
      names:
        items:
          type: string
        type: array
      time_limit:
        type: string
      usage_count:
        type: integer
      usage_limit:
        type: integer
    type: object
  domain.PinData:
    properties:
      author_id:
        type: integer
      author_username:
        type: string
      created_at:
        type: string
      description:
        type: string
      flow_id:
        type: integer
      header:
        type: string
      height:
        type: integer
      is_liked:
        type: boolean
      is_nsfw:
        type: boolean
      is_private:
        type: boolean
      is_star:
        type: boolean
      like_count:
        type: integer
      media_url:
        type: string
      updated_at:
        type: string
      width:
        type: integer
    type: object
  domain.RequestBodyFlowID:
    properties:
      flow_id:
        type: integer
    type: object
  rest.ServerResponse:
    properties:
      data: {}
      description:
        type: string
    type: object
info:
  contact: {}
  description: API for Flow.
  title: Flow API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Tries to log the user in
      parameters:
      - description: user email
        example: '"user@mail.ru"'
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: user password
        example: '"abcdefgh1234"'
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "403":
          description: invalid credentials
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Log in user
      tags:
      - Auth
  /api/v1/auth/logout:
    post:
      description: Logouts user
      produces:
      - application/json
      responses:
        "200":
          description: logged out
          schema:
            type: string
      summary: Logout user
      tags:
      - Auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Tries to register the user
      parameters:
      - description: user email
        example: '"admin@mail.ru"'
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: user username
        example: '"mailrudabest"'
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: user date of birth RFC
        example: '"1990-12-31T23:59:60Z"'
        in: body
        name: birthday
        required: true
        schema:
          type: string
      - description: user password
        example: '"unbreakable_password"'
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Register user
      tags:
      - Auth
  /api/v1/boards/{board_id}:
    delete:
      description: Delete board by ID. Authorization is required. Board must belong
        to user.
      parameters:
      - description: ID of the board to delete
        in: path
        name: board_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Board deleted successfully
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "400":
          description: Invalid board ID
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - not board owner
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: Board not found
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Delete board
      tags:
      - Board Management
    get:
      description: Get board details. Authorization is required. User must be author
        or coauthor of board.
      parameters:
      - description: Board ID to retrieve
        in: path
        name: board_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Board details
          schema:
            allOf:
            - $ref: '#/definitions/rest.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/domain.Board'
              type: object
        "400":
          description: Invalid board ID
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - private board
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: Board not found
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Get board details
      tags:
      - Board Management
    put:
      consumes:
      - application/json
      description: 'Updates board details: name, privacy settings. Authorization is
        required. User must be author or coauthor of board.'
      parameters:
      - description: Board ID to update
        in: path
        name: board_id
        required: true
        type: integer
      - description: 'update data: new name and is_private'
        in: body
        name: updateData
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Board updated successfully
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - not board owner
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: Board not found
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Update board details
      tags:
      - Board Management
  /api/v1/boards/{board_id}/coauthoring:
    delete:
      description: Refuse coauthoring of the board (user must be coauthor of the board)
      parameters:
      - description: ID of the board
        in: path
        name: board_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User has stopped being a coauthor
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - access denied
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Refuse coauthoring
      tags:
      - Board sharing [coauthor]
  /api/v1/boards/{board_id}/coauthors:
    delete:
      description: Remove coauthor from the board (user must be author of the board)
      parameters:
      - description: ID of the board
        in: path
        name: board_id
        required: true
        type: integer
      - description: Username of coauthor
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Coauthor has been successfully deleted
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - access denied
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: Username doesn't exist
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Remove coauthor
      tags:
      - Board sharing [author]
    get:
      description: Get coauthors of the board (user must be author of the board)
      parameters:
      - description: ID of the board
        in: path
        name: board_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: The list of coauthors has been successfully received
          schema:
            allOf:
            - $ref: '#/definitions/rest.ServerResponse'
            - properties:
                data:
                  properties:
                    author:
                      type: string
                    coauthors:
                      items:
                        type: string
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - access denied
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Get coauthors
      tags:
      - Board sharing [author]
  /api/v1/boards/{board_id}/flows:
    get:
      description: Retrieves flows in a board with pagination. Authorization is required.
        User must be author or coauthor of board.
      parameters:
      - description: ID of the board to retrieve flows from
        in: path
        name: board_id
        required: true
        type: integer
      - description: Page number (0-based index)
        in: query
        name: page
        required: true
        type: integer
      - description: Number of items per page
        in: query
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of flows in the board
          schema:
            allOf:
            - $ref: '#/definitions/rest.ServerResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.PinData'
                  type: array
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - access denied
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: Board not found
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Get flows with pagination
      tags:
      - Board Flows
    post:
      consumes:
      - application/json
      description: Add a flow to a board. Authorization is required. User must be
        author or coauthor of board.
      parameters:
      - description: Board ID
        in: path
        name: id
        required: true
        type: integer
      - description: Flow ID to add
        in: body
        name: flow
        required: true
        schema:
          $ref: '#/definitions/domain.BoardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Flow added successfully
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - not board owner
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: Board or flow not found
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Add flow
      tags:
      - Board Flows
  /api/v1/boards/{board_id}/flows/{id}:
    delete:
      description: Remove a flow from a board. Authorization is required. User must
        be author or coauthor of board.
      parameters:
      - description: Board ID
        in: path
        name: board_id
        required: true
        type: integer
      - description: Flow ID to remove
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Flow removed successfully
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - not board owner
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: Board or flow not found
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Remove flow
      tags:
      - Board Flows
    get:
      description: |-
        Authorized user can get flow: (1) from public board; (2) from private board if he is author or coauthor of board.
        Unauthorized user can get flow from public board only.
      parameters:
      - description: Board ID
        in: path
        name: board_id
        required: true
        type: integer
      - description: Flow ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Flow has been obtained successfully
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - not editor of private board
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: Board or flow not found
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Get flow
      tags:
      - Board Flows
  /api/v1/boards/{board_id}/invites:
    get:
      description: Get invitation links to the board with ID with parameters (user
        must be author of the board)
      parameters:
      - description: ID of the board
        in: path
        name: board_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Link list has been successfully fetched
          schema:
            allOf:
            - $ref: '#/definitions/rest.ServerResponse'
            - properties:
                data:
                  properties:
                    links:
                      items:
                        $ref: '#/definitions/domain.LinkParams'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - access denied
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: Board or links not found
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Get links
      tags:
      - Board sharing [author]
    post:
      description: Create invitation link to the board with parameters (person, time
        limit, usage limit) (user must be author of the board)
      parameters:
      - description: ID of the board
        in: path
        name: board_id
        required: true
        type: integer
      - description: 'Link parameters: usernames for personal invitation; time limit
          for link activity; usage limit'
        in: body
        name: _
        schema:
          $ref: '#/definitions/domain.Invitaion'
      produces:
      - application/json
      responses:
        "200":
          description: Link has been successfully created
          schema:
            allOf:
            - $ref: '#/definitions/rest.ServerResponse'
            - properties:
                data:
                  properties:
                    link:
                      type: string
                  type: object
              type: object
        "207":
          description: Link has been successfully created for valid names; Invalid
            usernames are returned
          schema:
            allOf:
            - $ref: '#/definitions/rest.ServerResponse'
            - properties:
                data:
                  properties:
                    invalid:
                      items:
                        type: string
                      type: array
                    link:
                      type: string
                  type: object
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - access denied
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: Link not found
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Create link
      tags:
      - Board sharing [author]
  /api/v1/boards/{board_id}/invites/{link}:
    delete:
      description: Delete invitation link to the board (user must be author of the
        board)
      parameters:
      - description: ID of the board
        in: path
        name: board_id
        required: true
        type: integer
      - description: Invitation link
        in: path
        name: link
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Link has been successfully deleted
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - access denied
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Delete link
      tags:
      - Board sharing [author]
  /api/v1/boards/{username}:
    post:
      consumes:
      - application/json
      description: Create a new board for the specified user. Authorization is required.
      parameters:
      - description: Username of the board owner
        in: path
        name: username
        required: true
        type: string
      - description: Board details
        in: body
        name: board
        required: true
        schema:
          $ref: '#/definitions/domain.Board'
      produces:
      - application/json
      responses:
        "200":
          description: Board created successfully
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "409":
          description: Board already exists
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Create board
      tags:
      - Board Management
  /api/v1/feed:
    get:
      consumes:
      - application/json
      description: Get pageSized number of flows.
      parameters:
      - description: requested page
        in: path
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: page not found
          schema:
            type: string
      summary: Get flows for feed
      tags:
      - Feed & Like
  /api/v1/flows:
    delete:
      description: Delete pin by ID. Authorization is required. Pin must belong to
        user.
      parameters:
      - description: pin to delete
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: invalid query parameter [id]
          schema:
            type: string
        "403":
          description: access to private pin is forbidden
          schema:
            type: string
        "404":
          description: no pin with given id
          schema:
            type: string
        "500":
          description: 'untracked error: ${error}'
          schema:
            type: string
      summary: Delete pin
      tags:
      - Pin CRUD
    get:
      description: Get public pin by ID or private pin if user its author.
      parameters:
      - description: requested pin
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: invalid query parameter [id]
          schema:
            type: string
        "403":
          description: access to private pin is forbidden
          schema:
            type: string
        "404":
          description: no pin with given id
          schema:
            type: string
        "500":
          description: 'untracked error: ${error}'
          schema:
            type: string
      summary: Get pin
      tags:
      - Pin CRUD
    post:
      description: Create pin with given header, description and private setting.
        Authorization is required.
      parameters:
      - description: pin image
        in: formData
        name: image
        required: true
        type: file
      - description: text header
        in: formData
        name: header
        type: string
      - description: text description
        in: formData
        name: description
        type: string
      - description: privacy setting
        in: formData
        name: is_private
        type: boolean
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            type: string
        "400":
          description: invalid image extension
          schema:
            type: string
        "401":
          description: user is not authorized
          schema:
            type: string
        "500":
          description: 'untracked error: ${error}'
          schema:
            type: string
      summary: Create pin
      tags:
      - Pin CRUD
    put:
      description: Update certain pin's fields. Authorization is required. Pin must
        belong to user.
      parameters:
      - description: pin ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      - description: text header
        in: body
        name: header
        schema:
          type: string
      - description: text description
        in: body
        name: description
        schema:
          type: string
      - description: privacy setting
        in: body
        name: is_private
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: no fields to update
          schema:
            type: string
        "401":
          description: user is not authorized
          schema:
            type: string
        "403":
          description: access to private pin is forbidden
          schema:
            type: string
        "404":
          description: no pin with given id
          schema:
            type: string
        "500":
          description: 'untracked error: ${error}'
          schema:
            type: string
      summary: Update pin
      tags:
      - Pin CRUD
  /api/v1/join/{link}:
    post:
      description: Join the board via invitation link as co-author; link mustn't be
        expired and, if link is private, user must be in group
      parameters:
      - description: Link
        in: path
        name: link
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User has successfully become a coauthor of the board
          schema:
            allOf:
            - $ref: '#/definitions/rest.ServerResponse'
            - properties:
                data:
                  properties:
                    board_id:
                      type: integer
                  type: object
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - access denied
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: Link not found
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "409":
          description: User is already coauthor
          schema:
            allOf:
            - $ref: '#/definitions/rest.ServerResponse'
            - properties:
                data:
                  properties:
                    board_id:
                      type: integer
                  type: object
              type: object
        "410":
          description: Link's time or usage limit has expired
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Join via link
      tags:
      - Board sharing [coauthor]
  /api/v1/like:
    post:
      consumes:
      - application/json
      description: |-
        If not liked: set like on flow.
        If liked: unset like on flow.
        Authorization is required.
      parameters:
      - description: flow id
        example: 456
        in: body
        name: pin_id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Like flow
      tags:
      - Feed & Like
  /api/v1/profile/boards:
    get:
      description: Get all user's boards. Authorization is required.
      produces:
      - application/json
      responses:
        "200":
          description: User's boards list
          schema:
            allOf:
            - $ref: '#/definitions/rest.ServerResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.Board'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Get personal boards
      tags:
      - Board Management
  /api/v1/profile/followers:
    get:
      description: Returns a pageSized number of user's followers
      parameters:
      - description: requested page
        in: path
        name: page
        required: true
        type: integer
      - description: requested size
        in: path
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: page not found
          schema:
            type: string
      summary: Get personal followers
      tags:
      - Subscription
  /api/v1/profile/following:
    get:
      description: Returns a pageSized number of user's subscriptions
      parameters:
      - description: requested page
        in: path
        name: page
        required: true
        type: integer
      - description: requested size
        in: path
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: page not found
          schema:
            type: string
      summary: Get personal subscriptions (or who they follow, in other words)
      tags:
      - Subscription
  /api/v1/search/boards:
    get:
      description: Returns a pageSized number of boards searched for
      parameters:
      - description: requested page
        in: path
        name: page
        required: true
        type: integer
      - description: requested page size
        in: path
        name: size
        required: true
        type: integer
      - description: search query
        example: '"?query=kittens"'
        in: path
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: page not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Searches for boards
      tags:
      - Search
  /api/v1/search/pins:
    get:
      description: Returns a pageSized number of pins searched for
      parameters:
      - description: requested page
        in: path
        name: page
        required: true
        type: integer
      - description: requested page size
        in: path
        name: size
        required: true
        type: integer
      - description: search query
        example: '"?query=kittens"'
        in: path
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: page not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Searches for pins
      tags:
      - Search
  /api/v1/search/users:
    get:
      description: Returns a pageSized number of users searched for
      parameters:
      - description: requested page
        in: path
        name: page
        required: true
        type: integer
      - description: requested page size
        in: path
        name: size
        required: true
        type: integer
      - description: search query
        example: '"?query=kittens"'
        in: path
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: page not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Searches for users
      tags:
      - Search
  /api/v1/stars:
    get:
      description: Get star pins of user. Authorization is required.
      produces:
      - application/json
      responses:
        "200":
          description: Star pins have been successfully fetched
          schema:
            allOf:
            - $ref: '#/definitions/rest.ServerResponse'
            - properties:
                data:
                  properties:
                    pins:
                      items:
                        $ref: '#/definitions/domain.PinData'
                      type: array
                    total_slots_count:
                      type: integer
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - access denied
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Get stars
      tags:
      - Star
  /api/v1/stars/{flow_id}:
    delete:
      description: Unset star property for pin with given ID. Authorization is required.
        Pin must belong to user.
      parameters:
      - description: pin ID
        in: path
        name: flow_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Star property has been unset successfully
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - access denied
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: User doesn't have pin with that ID
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Unset star
      tags:
      - Star
    post:
      description: Set star property for pin with given ID. Authorization is required.
        Pin must belong to user.
      parameters:
      - description: pin ID
        in: path
        name: flow_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Star property has been set successfully
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - access denied / No free star slots
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: User doesn't have pin with that ID
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "409":
          description: Star property was already set
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Set star
      tags:
      - Star
    put:
      description: Reassign star property from pin A with given ID to pin B. Authorization
        is required. Pins must belong to user.
      parameters:
      - description: initial star pin ID
        in: path
        name: flow_id
        required: true
        type: integer
      - description: new star pin ID
        in: body
        name: flow_id
        required: true
        schema:
          $ref: '#/definitions/domain.RequestBodyFlowID'
      produces:
      - application/json
      responses:
        "200":
          description: Star property has been unset successfully
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "403":
          description: Forbidden - access denied / No free star slots
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: User doesn't have one of the pins with that ID
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "409":
          description: New pin already have star property / Old pin doesn't have star
            property
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      security:
      - jwt_auth: []
      summary: Reassign star
      tags:
      - Star
  /api/v1/subscription:
    delete:
      consumes:
      - application/json
      description: Tries to unsubscribe the user from the target user
      parameters:
      - description: target user's username
        example: '"cool_guy"'
        in: body
        name: target_user
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "403":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Unsubscribe from
      tags:
      - Subscription
    post:
      consumes:
      - application/json
      description: Tries to subscribe the user to the target user
      parameters:
      - description: target user's username
        example: '"cool_guy"'
        in: body
        name: target_user
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "403":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Subscribe to
      tags:
      - Subscription
  /api/v1/user/{username}/boards:
    get:
      description: Retrieves public boards for a specific user.
      parameters:
      - description: Username to retrieve public boards for
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Public boards list
          schema:
            allOf:
            - $ref: '#/definitions/rest.ServerResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.Board'
                  type: array
              type: object
        "400":
          description: Invalid username
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/rest.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rest.ServerResponse'
      summary: Get user's public boards
      tags:
      - Board Management
  /health:
    get:
      description: Returns server status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Check server status
      tags:
      - System
swagger: "2.0"
