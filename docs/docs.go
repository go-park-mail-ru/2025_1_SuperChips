// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag/v2"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},"swagger":"2.0","info":{"description":"{{escape .Description}}","title":"{{.Title}}","contact":{},"version":"{{.Version}}"},"host":"{{.Host}}","basePath":"{{.BasePath}}","paths":{"/api/v1/auth/login":{"post":{"description":"Tries to log the user in","consumes":["application/json"],"produces":["application/json"],"summary":"Log in user","parameters":[{"example":"\"user@mail.ru\"","description":"user email","name":"email","in":"body","required":true,"schema":{"type":"string"}},{"example":"\"abcdefgh1234\"","description":"user password","name":"password","in":"body","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"400":{"description":"Bad Request","schema":{"type":"string"}},"403":{"description":"invalid credentials","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}}}},"/api/v1/auth/logout":{"post":{"description":"Logouts user","produces":["application/json"],"summary":"Logout user","responses":{"200":{"description":"logged out","schema":{"type":"string"}}}}},"/api/v1/auth/register":{"post":{"description":"Tries to register the user","consumes":["application/json"],"produces":["application/json"],"summary":"Register user","parameters":[{"example":"\"admin@mail.ru\"","description":"user email","name":"email","in":"body","required":true,"schema":{"type":"string"}},{"example":"\"mailrudabest\"","description":"user username","name":"username","in":"body","required":true,"schema":{"type":"string"}},{"example":"\"1990-12-31T23:59:60Z\"","description":"user date of birth RFC","name":"birthday","in":"body","required":true,"schema":{"type":"string"}},{"example":"\"unbreakable_password\"","description":"user password","name":"password","in":"body","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created","schema":{"type":"string"}},"400":{"description":"Bad Request","schema":{"type":"string"}},"409":{"description":"Conflict","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}}}},"/api/v1/boards/{board_id}":{"get":{"security":[{"jwt_auth":[]}],"description":"Retrieves board information with access control","produces":["application/json"],"tags":["boards"],"summary":"Get board details","parameters":[{"type":"integer","description":"Board ID to retrieve","name":"board_id","in":"path","required":true}],"responses":{"200":{"description":"Board details","schema":{"allOf":[{"$ref":"#/definitions/rest.ServerResponse"},{"type":"object","properties":{"data":{"$ref":"#/definitions/domain.Board"}}}]}},"400":{"description":"Invalid board ID","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"403":{"description":"Forbidden - private board","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"404":{"description":"Board not found","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/rest.ServerResponse"}}}},"put":{"security":[{"jwt_auth":[]}],"description":"Updates board name and privacy settings","consumes":["application/json"],"produces":["application/json"],"tags":["boards"],"summary":"Update board details","parameters":[{"type":"integer","description":"Board ID to update","name":"board_id","in":"path","required":true},{"description":"update data: new name and is_private","name":"updateData","in":"body","required":true,"schema":{"type":"object"}}],"responses":{"200":{"description":"Board updated successfully","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"400":{"description":"Invalid request data","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"403":{"description":"Forbidden - not board owner","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"404":{"description":"Board not found","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/rest.ServerResponse"}}}},"delete":{"security":[{"jwt_auth":[]}],"description":"Deletes a board by ID for authenticated user","produces":["application/json"],"tags":["boards"],"summary":"Delete a board","parameters":[{"type":"integer","description":"ID of the board to delete","name":"board_id","in":"path","required":true}],"responses":{"200":{"description":"Board deleted successfully","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"400":{"description":"Invalid board ID","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"403":{"description":"Forbidden - not board owner","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"404":{"description":"Board not found","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/rest.ServerResponse"}}}}},"/api/v1/boards/{board_id}/flows":{"get":{"security":[{"jwt_auth":[]}],"description":"Retrieves flows in a board with pagination for authenticated users","produces":["application/json"],"tags":["boards"],"summary":"Get board flows with pagination","parameters":[{"type":"integer","description":"ID of the board to retrieve flows from","name":"board_id","in":"path","required":true},{"type":"integer","description":"Page number (0-based index)","name":"page","in":"query","required":true},{"type":"integer","description":"Number of items per page","name":"size","in":"query","required":true}],"responses":{"200":{"description":"List of flows in the board","schema":{"allOf":[{"$ref":"#/definitions/rest.ServerResponse"},{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/definitions/domain.PinData"}}}}]}},"400":{"description":"Invalid request parameters","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"403":{"description":"Forbidden - access denied","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"404":{"description":"Board not found","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/rest.ServerResponse"}}}}},"/api/v1/boards/{board_id}/flows/{id}":{"delete":{"security":[{"jwt_auth":[]}],"description":"Removes a flow from a board for authenticated user","produces":["application/json"],"tags":["boards"],"summary":"Remove flow from board","parameters":[{"type":"integer","description":"Board ID","name":"board_id","in":"path","required":true},{"type":"integer","description":"Flow ID to remove","name":"id","in":"path","required":true}],"responses":{"200":{"description":"Flow removed successfully","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"400":{"description":"Invalid request data","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"403":{"description":"Forbidden - not board owner","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"404":{"description":"Board or flow not found","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/rest.ServerResponse"}}}}},"/api/v1/boards/{id}/flows":{"post":{"security":[{"jwt_auth":[]}],"description":"Adds a flow to a board for authenticated user","consumes":["application/json"],"produces":["application/json"],"tags":["boards"],"summary":"Add flow to board","parameters":[{"type":"integer","description":"Board ID","name":"id","in":"path","required":true},{"description":"Flow ID to add","name":"flow","in":"body","required":true,"schema":{"$ref":"#/definitions/rest.BoardRequest"}}],"responses":{"200":{"description":"Flow added successfully","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"400":{"description":"Invalid request data","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"403":{"description":"Forbidden - not board owner","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"404":{"description":"Board or flow not found","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/rest.ServerResponse"}}}}},"/api/v1/boards/{username}":{"post":{"security":[{"jwt_auth":[]}],"description":"Creates a new board for the specified user","consumes":["application/json"],"produces":["application/json"],"tags":["boards"],"summary":"Create a new board","parameters":[{"type":"string","description":"Username of the board owner","name":"username","in":"path","required":true},{"description":"Board details","name":"board","in":"body","required":true,"schema":{"$ref":"#/definitions/domain.Board"}}],"responses":{"200":{"description":"Board created successfully","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"400":{"description":"Invalid request data","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"409":{"description":"Board already exists","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/rest.ServerResponse"}}}}},"/api/v1/feed":{"get":{"description":"Returns a pageSized number of pins","consumes":["application/json"],"produces":["application/json"],"summary":"Get Pins","parameters":[{"type":"integer","description":"requested page","name":"page","in":"path","required":true}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"400":{"description":"bad request","schema":{"type":"string"}},"404":{"description":"page not found","schema":{"type":"string"}}}}},"/api/v1/profile/boards":{"get":{"security":[{"jwt_auth":[]}],"description":"Retrieves all boards (public and private) for authenticated user","produces":["application/json"],"tags":["boards"],"summary":"Get all user boards","responses":{"200":{"description":"User's boards list","schema":{"allOf":[{"$ref":"#/definitions/rest.ServerResponse"},{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/definitions/domain.Board"}}}}]}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/rest.ServerResponse"}}}}},"/api/v1/user/{username}/boards":{"get":{"description":"Retrieves public boards for a specific user","produces":["application/json"],"tags":["boards"],"summary":"Get user's public boards","parameters":[{"type":"string","description":"Username to retrieve public boards for","name":"username","in":"path","required":true}],"responses":{"200":{"description":"Public boards list","schema":{"allOf":[{"$ref":"#/definitions/rest.ServerResponse"},{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/definitions/domain.Board"}}}}]}},"400":{"description":"Invalid username","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"404":{"description":"User not found","schema":{"$ref":"#/definitions/rest.ServerResponse"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/rest.ServerResponse"}}}}},"/health":{"get":{"description":"Returns server status","produces":["application/json"],"summary":"Check server status","responses":{"200":{"description":"OK","schema":{"type":"string"}}}}}},"definitions":{"domain.Board":{"type":"object","properties":{"author_id":{"type":"integer"},"flow_count":{"type":"integer"},"id":{"type":"integer"},"is_private":{"type":"boolean"},"name":{"type":"string"},"preview":{"type":"array","items":{"$ref":"#/definitions/domain.PinData"}}}},"domain.PinData":{"type":"object","properties":{"author_id":{"type":"integer"},"created_at":{"type":"string"},"description":{"type":"string"},"header":{"type":"string"},"is_private":{"type":"boolean"},"like_count":{"type":"integer"},"media_url":{"type":"string"},"updated_at":{"type":"string"}}},"rest.BoardRequest":{"type":"object","properties":{"flow_id":{"type":"integer"}}},"rest.ServerResponse":{"type":"object","properties":{"data":{},"description":{"type":"string"}}}}}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "flow API",
	Description:      "API for Flow.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
